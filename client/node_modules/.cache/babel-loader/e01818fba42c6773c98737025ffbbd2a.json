{"ast":null,"code":"export const initialState = {\n  basket: [],\n  user: null\n};\nexport const totalAmount = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount + 1, 0);\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case 'EMPTY_BASKET':\n      return { ...state,\n        basket: []\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Cant remove product (id: ${action.id}) as its not in basket!`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/sab4/Desktop/SISProject/client/src/redux/reducer.js"],"names":["initialState","basket","user","totalAmount","reduce","amount","item","price","reducer","state","action","console","log","type","index","findIndex","basketItem","id","newBasket","splice","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE,EADkB;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB;AAIP,OAAO,MAAMC,WAAW,GAAIF,MAAD,IAC3BA,MAD2B,aAC3BA,MAD2B,uBAC3BA,MAAM,CAAEG,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAAb,GAAsB,CAAvD,EAAyD,CAAzD,CADO;;AAGP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAK,eAAL;AACF,aAAO,EACL,GAAGJ,KADE;AAELR,QAAAA,MAAM,EAAE,CAAC,GAAGQ,KAAK,CAACR,MAAV,EAAkBS,MAAM,CAACJ,IAAzB;AAFH,OAAP;;AAKF,SAAK,cAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELR,QAAAA,MAAM,EAAE;AAFH,OAAP;;AAKF,SAAK,oBAAL;AACE,YAAMa,KAAK,GAAGL,KAAK,CAACR,MAAN,CAAac,SAAb,CACXC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBP,MAAM,CAACO,EAD7B,CAAd;AAGA,UAAIC,SAAS,GAAG,CAAC,GAAGT,KAAK,CAACR,MAAV,CAAhB;;AAEA,UAAIa,KAAK,IAAI,CAAb,EAAgB;AACdI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB;AAED,OAHD,MAGO;AACLH,QAAAA,OAAO,CAACS,IAAR,CACG,4BAA2BV,MAAM,CAACO,EAAG,yBADxC;AAGD;;AAED,aAAO,EACL,GAAGR,KADE;AAELR,QAAAA,MAAM,EAAEiB;AAFH,OAAP;AA5BF;AAkCD,CApCD;;AAqCA,eAAeV,OAAf","sourcesContent":["export const initialState = {\n  basket: [],\n  user: null\n};\nexport const totalAmount = (basket) => \nbasket?.reduce((amount, item) => item.price + amount + 1,0);\n\nconst reducer = (state, action) => {\n  console.log(action);\n  switch (action.type) {\n      case \"ADD_TO_BASKET\":\n    return {\n      ...state,\n      basket: [...state.basket, action.item],\n    };\n  \n  case 'EMPTY_BASKET':\n    return {\n      ...state,\n      basket: []\n    }\n\n  case \"REMOVE_FROM_BASKET\":\n    const index = state.basket.findIndex(\n      (basketItem) => basketItem.id === action.id\n    );\n    let newBasket = [...state.basket];\n\n    if (index >= 0) {\n      newBasket.splice(index, 1);\n\n    } else {\n      console.warn(\n        `Cant remove product (id: ${action.id}) as its not in basket!`\n      )\n    }\n\n    return {\n      ...state,\n      basket: newBasket\n    }\n  \n  }\n}\nexport default reducer;"]},"metadata":{},"sourceType":"module"}